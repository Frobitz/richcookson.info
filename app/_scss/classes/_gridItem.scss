//
// Grid Item
// Sets an element as an item in the grid. Use with generated grid sizing
// and grid offset classes to adjust position and size.
// -----------------------------------------------------------------------------

.grid-item {
  grid-column-end: span 12;
  position: relative;
  width: auto;

  &.h-center {
    align-items: center;
  }

  &.v-center {
    justify-content: center;
  }

  &.h-end {
    align-items: flex-end;
  }

  &.v-end {
    justify-content: end;
  }

  &.v-stretch {
    justify-content: stretch;
  }
}

.grid-new-row {
  grid-column-start: 1;
}

@each $breakpoint, $size in $breakpoints {
  @media screen and (min-width: #{$size}) {
    @for $i from 1 through 12 {
      /* Col width classes */
      .#{$breakpoint}-#{$i} {
        display: flex;
        flex-direction: column;
        grid-column-end: span $i;
        width: auto;

        &.grid-item-center {
          grid-column-end: span 12;
          justify-self: center;
          max-width: percentage(calc($i / 12));
        }
      }

      /* Offset classes */
      .#{$breakpoint}-offset-#{$i} {
        grid-column-start: $i + 1;
      }
    }
  }
}
